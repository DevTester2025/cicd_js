name: dockerhub_01

on:
  workflow_dispatch:

jobs:
  build:
    name: GITHUB
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
  
   #---------------- SONARQUBE
  SONARQUBE:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: sqp_d5c17085de7fd62151dcac07600573c7c9ca70cc
          SONAR_HOST_URL: http://56.228.14.44:9000

  #---------------- BUILD_SCRIPT
  BUILD_SCRIPT:
   needs: [SONARQUBE]
   runs-on: ubuntu-latest
   steps:
   - name: Run script on the VM
     run: |
       sshpass -p "a7X2p9L4kR" ssh -p 222 -o StrictHostKeyChecking=no omnisecure@56.228.14.44 <<EOF
       cd ~/projects/apps/sample_project
       source ~/.nvm/nvm.sh
       nvm use default
       node -v
       cd ~/projects/apps/sample_project
       pwd
       rm -rf node_modules package-lock.json dist
       npm install
       npm run build 
       EOF

  #---------------- DOCKER BUILD & PUSH
  DOCKERHUB:
    needs: [BUILD_SCRIPT]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
            username: devtester2025
            password: dckr_pat_W9cx0PiYuv_5BgW54h7oBv1viCU
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: devtester2025/pipelinev2:main
          context: .
          file: ./Dockerfile
          build-args: |
            ENV=prod  

  #---------------- DEPLOY TO VM
  VIRTUAL_MACHINE:
    runs-on: ubuntu-latest
    needs: [DOCKERHUB]
    steps:
      - name: Deploy to Linux Server
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ubuntu@13.51.7.24 \
            "sudo docker pull devtester2025/pipelinev2:main && \
             sudo docker stop running-container || true && \
             sudo docker rm running-container || true && \
             sudo docker run --name running-container -p 4200:4200 -d devtester2025/pipelinev2:main"
