name: dockerhub_01

on:
  workflow_dispatch:

jobs:
  build:
    name: GITHUB
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
  
  #---------------- SONARQUBE
  SONARQUBE:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: http://56.228.14.44:9000

  #---------------- BUILD ANGULAR ON GITHUB RUNNER
  BUILD_ANGULAR:
    needs: [SONARQUBE]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Matches your Dockerfile
      - name: Install dependencies
        run: npm install --legacy-peer-deps
      - name: Build Angular app
        run: npm run build-prod  # Or your specific build command
      - name: Verify build output
        run: ls -la dist/cloudmatiq-web/

  #---------------- DOCKER BUILD & PUSH
  DOCKERHUB:
    needs: [BUILD_ANGULAR]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: devtester2025/pipelinev2:main
          context: .
          file: ./Dockerfile
          build-args: |
            ENV=prod  

  #---------------- DEPLOY TO VM
  VIRTUAL_MACHINE:
    runs-on: ubuntu-latest
    needs: [DOCKERHUB]
    steps:
      - name: Deploy to Linux Server
        run: |
          sshpass -p "${{ secrets.SSH_PASSWORD }}" ssh -o StrictHostKeyChecking=no ubuntu@13.51.7.24 \
            "sudo docker pull devtester2025/pipelinev2:main && \
             sudo docker stop running-container || true && \
             sudo docker rm running-container || true && \
             sudo docker run --name running-container -p 4200:4200 -d devtester2025/pipelinev2:main"
