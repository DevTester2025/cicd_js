name: docker_test

on:
  workflow_dispatch:

jobs:
  build:
    name: GITHUB
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

  #---------------- SONARQUBE
  SONARQUBE:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: sqp_d5c17085de7fd62151dcac07600573c7c9ca70cc
          SONAR_HOST_URL: http://51.20.80.105:9000

  #---------------- BUILD_SCRIPT
  BUILD_SCRIPT:
    needs: [SONARQUBE]
    runs-on: ubuntu-latest
    steps:
      - name: Run script on the VM
        run: |
          sshpass -p "a7X2p9L4kR" ssh -p 222 -o StrictHostKeyChecking=no omnisecure@51.20.80.105 <<EOF
            cd ~/projects/apps/sample_project
            source ~/.nvm/nvm.sh
            nvm use default
            node -v
            rm -rf node_modules package-lock.json dist
            npm install
            ng build --output-path=dist/angular-conduit
            echo "Build output contents>>:"
            ls -la dist/
            echo "Building Docker image..."
            docker build -t devtester2025/pipelinev1:main .
            echo "Pushing Docker image..."
            docker login -u devtester2025 -p dckr_pat_W9cx0PiYuv_5BgW54h7oBv1viCU
            docker push devtester2025/pipelinev1:main
          EOF



  #---------------- VIRTUAL_MACHINE
  VIRTUAL_MACHINE:
    needs: [BUILD_SCRIPT]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy to Linux Server
        run: |
          sshpass -p CmCICD#2024# ssh -o StrictHostKeyChecking=no ubuntu@13.51.7.24 "sudo docker pull devtester2025/pipelinev1:main && sudo docker run --rm -p 222:222 -d devtester2025/pipelinev1:main"
